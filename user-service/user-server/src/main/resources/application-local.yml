server:
  port: 18082
  servlet:
    context-path: /user
  address:

spring:
  application:
    name: user
  sql:
    init:
      mode: always
      continue-on-error: false
      schema-locations: classpath:/db/init.sql
  #      data-locations: classpath:/db/data.sql
  servlet:
    multipart:
      enabled: true # 启用多文件上传
      file-size-threshold: 0 # 最小文件大小
      max-file-size: 100MB # 单个数据大小
      max-request-size: 100MB # 总数据大小
  main:
    allow-bean-definition-overriding: true # 允许重复定义Bean
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/user_service?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&serverTimezone=Asia/Shanghai&rewriteBatchedStatements=true&useIPv6=false
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 500
      max-lifetime: 18000000
      minimum-idle: 30
      connection-timeout: 30000
      connection-test-query: SELECT 1
      pool-name: HiKariDataSource
      type: com.zaxxer.hikari.HikariDataSource
      idle-timeout: 180000
      auto-commit: true
  jackson:
    time-zone: GMT+8
    date-format: yyyy-MM-dd HH:mm:ss
  cache:
    type: caffeine
  data:
    redis:
      #      url: redis://user:password@localhost:6379
      host: localhost
      port: 6379
      database: 0
      #      username: admin
      #      password: admin
      timeout: 60s
      connect-timeout: 60s
      client-name: user_redis_client
      client-type: lettuce
      lettuce:
        shutdown-timeout: 100ms
        cluster:
          refresh:
            adaptive: true
            dynamic-refresh-sources: true
            period: 60s
        pool:
          enabled: true
          max-idle: 10 # 连接池中最大空闲连接
          min-idle: 5 # 连接池中最小空闲连接
          max-active: 100 # 最大连接数。-1表示不限制
          max-wait: 60s # 最大阻塞时间。-1表示不限制
          time-between-eviction-runs: 1s  # 逐出空闲连接的时间间隔



#  security:
#    oauth2:
#      client:
#        registration:
#          auth_service:
#            provider: auth_provider
#            client-id: "user_service_id"
#            client-secret: "user_service_secret"
#            client-authentication-method: "client_secret_post"
#            authorization-grant-type: "authorization_code"
#            redirect-uri: "https://www.baidu.com"
#            scope:
#              - "all"
#            client-name: "user_service"
#
#        #          github:
#        #            client-id: Iv1.2ca5be8c36b99a36
#        #            client-secret: aef8ff70890349d77d76b9bcf513ef2ba422771d
#        #            redirect-uri: https://www.baidu.com
#
#        provider:
#          auth_provider:
#            authorization-uri: "http://127.0.0.1:9909/auth/oauth2/authorize"
#            token-uri: "http://127.0.0.1:9909/auth/oauth2/token"
#            user-info-uri: "http://127.0.0.1:9909/auth/oauth2/userinfo"
#            user-info-authentication-method: "post"
#            user-name-attribute: "username"
#            jwk-set-uri: "http://127.0.0.1:9909/auth/oauth2/certs"
#            issuer-uri: "http://127.0.0.1:9909/auth/oauth2/token"

# mybatis-plus
mybatis-plus:
  mapper-locations: classpath:/mapper/*.xml
  type-aliases-package: com.wxf.user.model
  check-config-location: true # 启动时检查Mybatis XML 是否存在，默认不检查
  global-config:
    db-config:
      id-type: auto # ID 生成规则
      logic-delete-field: deleted
      logic-delete-value: 1
      logic-not-delete-value: 0
  configuration:
    # 自动驼峰命名规则映射
    map-underscore-to-camel-case: true
    # 打印SQL
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    # 是否开启二级缓存，默认为true
#    cache-enabled: false
    # 本地缓存范围 session：会话级别；statement：只对这个查询有效
#    local-cache-scope: session
    # 是否对空值进行缓存
#    call-setters-on-nulls: true

# 日志
logging:
  config: classpath:log4j2-spring.xml
  charset:
    console: utf-8

# dubbo
dubbo:
  application:
    name: ${spring.application.name}
  protocol:
    name: dubbo
    port: -1
  registry:
    address: zookeeper://127.0.0.1:2181
    check: false # 不做服务注册检查，即使报错也能启动
  provider:
    auth: false
    retries: 3 # 重试次数
  consumer:
    check: false # 注册失败也能启动
    retries: 3 # 重试次数

# 监控
management:
  endpoints:
    web:
      exposure:
        include: '*'
  metrics:
    tags:
      application: ${spring.application.name}
  prometheus:
    metrics:
      export:
        pushgateway:
          enabled: true

